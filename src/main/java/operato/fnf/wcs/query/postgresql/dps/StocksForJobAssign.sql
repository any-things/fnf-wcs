T_STOKCS AS (
	SELECT 
		Y.BATCH_ID,
		X.COM_CD,
		X.SKU_CD,
		X.LOAD_QTY,
		Y.ORDER_SKU_CNT,
		Y.ORDER_QTY
	FROM 
		(SELECT
			S.COM_CD,
			S.SKU_CD,
			SUM(S.LOAD_QTY) AS LOAD_QTY
		FROM
			STOCKS S INNER JOIN CELLS C ON S.DOMAIN_ID = C.DOMAIN_ID AND S.EQUIP_TYPE = C.EQUIP_TYPE AND S.EQUIP_CD = C.EQUIP_CD
		WHERE
			DOMAIN_ID = :domainId
			AND S.EQUIP_TYPE = :equipType
			AND S.EQUIP_CD = :equipCd
			AND S.COM_CD IS NOT NULL
			AND S.SKU_CD IS NOT NULL
			AND S.LOAD_QTY > 0
			AND S.ACTIVE_FLAG = true
			AND C.ACTIVE_FLAG = true
		GROUP BY 
			S.COM_CD, S.SKU_CD
		) X
		
		INNER JOIN
		
		(SELECT 
			WORK_UNIT AS BATCH_ID,
			'FnF' AS COM_CD,
			ITEM_CD AS SKU_CD, 
			SUM(PICK_QTY) AS ORDER_QTY,
			COUNT(1) AS ORDER_SKU_CNT
		FROM
			MHE_DR
		WHERE
			WH_CD = 'ICF'
			AND WORK_UNIT = :batchId
		GROUP BY 
			WORK_UNIT, ITEM_CD
		) Y
		
		ON X.COM_CD = Y.COM_CD AND X.SKU_CD = Y.SKU_CD
),
T_ASSIGN_SKU AS (
	SELECT 
		MIN(ASSIGN_PRIORITY) AS ASSIGN_PRIORITY, BATCH_ID, COM_CD, SKU_CD, LOAD_QTY, ORDER_SKU_CNT, ORDER_QTY
	FROM (
		SELECT 1 AS ASSIGN_PRIORITY, BATCH_ID, COM_CD, SKU_CD, LOAD_QTY, ORDER_SKU_CNT, ORDER_QTY
		FROM T_STOCKS
		WHERE ORDER_QTY <= LOAD_QTY

		UNION ALL

		SELECT 2 AS ASSIGN_PRIORITY, BATCH_ID, COM_CD, SKU_CD, LOAD_QTY, ORDER_SKU_CNT, ORDER_QTY
		FROM T_STOCKS
		WHERE ORDER_SKU_CNT >= LOAD_QTY

		UNION ALL

		SELECT 3 AS ASSIGN_PRIORITY, BATCH_ID, COM_CD, SKU_CD, LOAD_QTY, ORDER_SKU_CNT, ORDER_QTY
		FROM T_STOCKS
	)
	GROUP BY 
		BATCH_ID, COM_CD, SKU_CD, LOAD_QTY, ORDER_SKU_CNT, ORDER_QTY
)
SELECT
	BATCH_ID, COM_CD, SKU_CD, LOAD_QTY, ORDER_SKU_CNT, ORDER_QTY
FROM 
	T_ASSIGN_SKU
ORDER BY
	ASSIGN_PRIORITY ASC, LOAD_QTY DESC, SKU_CD ASC